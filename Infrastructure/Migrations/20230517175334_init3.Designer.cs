// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RestaurentDbContext))]
    [Migration("20230517175334_init3")]
    partial class init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Infrastructure.Entities.Bill", b =>
                {
                    b.Property<long>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerFname")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerLname")
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("REAL");

                    b.HasKey("BillId");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("Infrastructure.Entities.Booking", b =>
                {
                    b.Property<long>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CustId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TableId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TableNum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("BookingId");

                    b.HasIndex("CustId");

                    b.HasIndex("TableId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("Infrastructure.Entities.Cashier", b =>
                {
                    b.Property<long>("CashierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Bdate")
                        .HasColumnType("BLOB");

                    b.Property<string>("Contact")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fname")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("JoinDate")
                        .HasColumnType("BLOB");

                    b.Property<string>("Lname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .HasColumnType("TEXT");

                    b.HasKey("CashierId");

                    b.ToTable("Cashier");
                });

            modelBuilder.Entity("Infrastructure.Entities.Cook", b =>
                {
                    b.Property<long>("CookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contact")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fname")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialization")
                        .HasColumnType("TEXT");

                    b.HasKey("CookId");

                    b.ToTable("Cook");
                });

            modelBuilder.Entity("Infrastructure.Entities.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contact")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lname")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Infrastructure.Entities.DeliveryBoy", b =>
                {
                    b.Property<long>("DeliveryBoyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Bdate")
                        .HasColumnType("BLOB");

                    b.Property<string>("Contact")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fname")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("JoinDate")
                        .HasColumnType("BLOB");

                    b.Property<string>("Lname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .HasColumnType("TEXT");

                    b.HasKey("DeliveryBoyId");

                    b.ToTable("DeliveryBoy");
                });

            modelBuilder.Entity("Infrastructure.Entities.HomeDelivery", b =>
                {
                    b.Property<long>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contact")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CustId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DeliveryId");

                    b.HasIndex("CustId");

                    b.HasIndex("OrderId");

                    b.ToTable("HomeDelivery");
                });

            modelBuilder.Entity("Infrastructure.Entities.Menu", b =>
                {
                    b.Property<long>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long?>("OrderDetailsOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("MenuId");

                    b.HasIndex("OrderDetailsOrderId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Infrastructure.Entities.OrderDetails", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BillId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OrderBillId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderBillId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Infrastructure.Entities.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contact")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("OpeningClosingTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("Infrastructure.Entities.SaleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Daily")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Date")
                        .HasColumnType("BLOB");

                    b.Property<long?>("Monthly")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rname")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Weekly")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SaleDetail");
                });

            modelBuilder.Entity("Infrastructure.Entities.Supplier", b =>
                {
                    b.Property<long>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contact")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lname")
                        .HasColumnType("TEXT");

                    b.HasKey("SupplierId");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Infrastructure.Entities.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Details")
                        .HasColumnType("TEXT");

                    b.Property<string>("TableNumber")
                        .HasColumnType("TEXT");

                    b.Property<long>("WaiterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TableId");

                    b.HasIndex("WaiterId");

                    b.ToTable("Table");
                });

            modelBuilder.Entity("Infrastructure.Entities.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Infrastructure.Entities.Waiter", b =>
                {
                    b.Property<long>("WaiterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contact")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fname")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TableId")
                        .HasColumnType("INTEGER");

                    b.HasKey("WaiterId");

                    b.ToTable("Waiter");
                });

            modelBuilder.Entity("Infrastructure.Entities.Booking", b =>
                {
                    b.HasOne("Infrastructure.Entities.Customer", "Cust")
                        .WithMany("Bookings")
                        .HasForeignKey("CustId");

                    b.HasOne("Infrastructure.Entities.Table", "TableNumNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("TableId");

                    b.Navigation("Cust");

                    b.Navigation("TableNumNavigation");
                });

            modelBuilder.Entity("Infrastructure.Entities.HomeDelivery", b =>
                {
                    b.HasOne("Infrastructure.Entities.Customer", "Cust")
                        .WithMany("HomeDeliveries")
                        .HasForeignKey("CustId");

                    b.HasOne("Infrastructure.Entities.Bill", "Order")
                        .WithMany("HomeDeliveries")
                        .HasForeignKey("OrderId");

                    b.Navigation("Cust");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Infrastructure.Entities.Menu", b =>
                {
                    b.HasOne("Infrastructure.Entities.OrderDetails", null)
                        .WithMany("Menus")
                        .HasForeignKey("OrderDetailsOrderId");
                });

            modelBuilder.Entity("Infrastructure.Entities.OrderDetails", b =>
                {
                    b.HasOne("Infrastructure.Entities.Bill", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Infrastructure.Entities.Table", b =>
                {
                    b.HasOne("Infrastructure.Entities.Waiter", "Waiter")
                        .WithMany("Tables")
                        .HasForeignKey("WaiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Waiter");
                });

            modelBuilder.Entity("Infrastructure.Entities.Bill", b =>
                {
                    b.Navigation("HomeDeliveries");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Infrastructure.Entities.Customer", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("HomeDeliveries");
                });

            modelBuilder.Entity("Infrastructure.Entities.OrderDetails", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Infrastructure.Entities.Table", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Infrastructure.Entities.Waiter", b =>
                {
                    b.Navigation("Tables");
                });
#pragma warning restore 612, 618
        }
    }
}
